package person.vadym;

import java.util.ArrayList;
import java.util.List;

public class VulnerabilityScriptService {

    private final VulnerabilityScriptRepository vulnerabilityScriptRepository;

    public VulnerabilityScriptService(VulnerabilityScriptRepository vulnerabilityScriptRepository) {
        this.vulnerabilityScriptRepository = vulnerabilityScriptRepository;
    }

    public List<Integer> getExecutionPlan(int scriptId) {
        List<Integer> executionPlan = new ArrayList<>();

        VulnerabilityScript script = vulnerabilityScriptRepository.findByScriptId(scriptId);
        addScriptToExecutionPlan(executionPlan, script);

        return executionPlan;
    }

    private void addScriptToExecutionPlan(List<Integer> executionPlan, VulnerabilityScript script) {
        int dependencyIndex = getIndexAfterDependencies(executionPlan, script.getDependencies());
        executionPlan.add(dependencyIndex, script.getScriptId());

        List<Integer> dependencies = new ArrayList<>(script.getDependencies());
        dependencies.removeIf(executionPlan::contains);

        if (dependencies.isEmpty()) {
            return;
        }

        for (VulnerabilityScript dependency : vulnerabilityScriptRepository.findByScriptIdIn(dependencies)) {
            addScriptToExecutionPlan(executionPlan, dependency);
        }
    }

    private int getIndexAfterDependencies(List<Integer> executionPlan, List<Integer> dependencies) {
        int index = 0;

        for (Integer dependency : dependencies) {
            int dependencyIndex = executionPlan.indexOf(dependency);
            if (dependencyIndex != -1) {
                index = Math.max(index, dependencyIndex + 1);
            }
        }

        return index;
    }
}
